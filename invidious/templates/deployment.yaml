apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "invidious.fullname" . }}
  labels:
    {{- include "invidious.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "invidious.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "invidious.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "invidious.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      # this part below is very important. If you want to deploy your helm release with the name "invidious", this results in an automatic environment variable from kubernetes "INVIDIOUS_PORT" with the value tpc://1.2.3.4:3000
      # That unfortunately breaks invidious as it required INVIDIOUS_PORT to be an integer (e.g. 3000). Other release names like, e.g. invidious-app would create "INVIDIOUS_APP_INVIDIOUS_PORT" with again the tcp string, but this
      # time it does not interfer. Kubernetes tries to be "smart" and strips away the release name, if it matches the chart name. Hard to find ...
      enableServiceLinks: false
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: INVIDIOUS_CONFIG
              value: |
                check_tables: true
                db:
                  dbname: {{ .Values.postgresql.global.postgresql.auth.database }}
                  user: {{ .Values.postgresql.global.postgresql.auth.username }}
                  password: {{ .Values.postgresql.global.postgresql.auth.password }}
                  host: {{ printf "%s-%s" .Release.Name "postgresql" | trunc 63 | trimSuffix "-" }}
                  port: 5432
{{ .Values.config | toYaml | indent 16 }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
