# Default values for scrumlr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount:
  backend: 1
  frontend: 1

image:
  backend:
    repository: ghcr.io/inovex/scrumlr.io/scrumlr-server
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  frontend:
    repository: ghcr.io/inovex/scrumlr.io/scrumlr-frontend
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  backend: {}
  frontend: {}
podLabels:
  backend: {}
  frontend: {}

podSecurityContext:
  backend: {}
    # fsGroup: 2000
  frontend: {}
    # fsGroup: 2000

securityContext:
  backend: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  frontend: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

service:
  backend:
    type: ClusterIP
    port: 8080
  frontend:
    type: ClusterIP
    port: 80

ingress:
  backend:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /api/
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  frontend:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

resources:
  backend: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  frontend: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

livenessProbe:
  backend:
    httpGet:
      path: /api/
      port: backend
  frontend:
    httpGet:
      path: /
      port: frontend
readinessProbe:
  backend:
    httpGet:
      path: /api/
      port: backend
  frontend:
    httpGet:
      path: /
      port: frontend

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  backend: []
#   - name: foo
#     secret:
#       secretName: mysecret
#       optional: false
  frontend: []
#   - name: foo
#     secret:
#       secretName: mysecret
#       optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  backend: []
#   - name: foo
#     mountPath: "/etc/foo"
#     readOnly: true
  frontend: []
#   - name: foo
#     mountPath: "/etc/foo"
#     readOnly: true

nodeSelector:
  backend: {}
  frontend: {}

tolerations:
  backend: []
  frontend: []

affinity:
  backend: {}
  frontend: {}

command:
  backend: []
  frontend: []

args:
  backend:
    - "/app/main"
    - "-disable-check-origin"
  frontend: []

env:
  backend:
    SCRUMLR_BASE_PATH: /api
    SCRUMLR_INSECURE: "true"
    # needed in ES512 (ecdsa), openssl ecparam -name secp256k1 -genkey -noout
    SCRUMLR_UNSAFE_PRIVATE_KEY: |
      -----BEGIN EC PRIVATE KEY-----
      MHQCAQEEINS4X4Lmf5M8RFEf/G7gf+Mu4zBuX/RcsrDX+VQHIAGJoAcGBSuBBAAK
      oUQDQgAESvLQeE/ejLMCl9Vh2r4qqYqROJFE9b+kIdeSOi8eSMf8VAX9bjUuZxNI
      Znm4Sd2Ex+vh6IOisoWWCDwjReePNg==
      -----END EC PRIVATE KEY-----
    # needed in ES512 (ecdsa), openssl ecparam -name secp256k1 -genkey -noout
    SCRUMLR_PRIVATE_KEY: |
      -----BEGIN EC PRIVATE KEY-----
      MHQCAQEEIOTbkKBgq299B8ScYithYx6t4+xgN0WnsvBrp1kmZ8NgoAcGBSuBBAAK
      oUQDQgAEvyI2bpgT0NctCcc/MmeWThWfRCCWs/q1/+WQIr8U9MHPIsiv4K8nuyCk
      1bZrfjmXtpBBBMWj+aXXB3D+/CgZMA==
      -----END EC PRIVATE KEY-----
    SCRUMLR_SERVER_PORT: "8080"
    SCRUMLR_SERVER_NATS_URL: nats://scrumlr-nats:4222
    SCRUMLR_SERVER_DATABASE_URL: postgres://scrumlr:scrumlr@scrumlr-postgresql:5432/scrumlr
    #SCRUMLR_SERVER_REDIS_HOST: 
    #SCRUMLR_SERVER_REDIS_USERNAME: 
    #SCRUMLR_SERVER_REDIS_PASSWORD:
    #SCRUMLR_AUTH_GOOGLE_CLIENT_ID: 
    #SCRUMLR_AUTH_GOOGLE_CLIENT_SECRET: 
    #SCRUMLR_AUTH_GITHUB_CLIENT_ID: 
    #SCRUMLR_AUTH_GITHUB_CLIENT_SECRET: 
    #SCRUMLR_AUTH_MICROSOFT_CLIENT_ID: 
    #SCRUMLR_AUTH_MICROSOFT_CLIENT_SECRET: 
    #SCRUMLR_AUTH_AZURE_AD_TENANT_ID: 
    #SCRUMLR_AUTH_AZURE_AD_CLIENT_ID: 
    #SCRUMLR_AUTH_AZURE_AD_CLIENT_SECRET: 
    #SCRUMLR_AUTH_APPLE_CLIENT_ID: 
    #SCRUMLR_AUTH_APPLE_CLIENT_SECRET: 
    #SCRUMLR_AUTH_CALLBACK_HOST: 
    #SCRUMLR_FEEDBACK_WEBHOOK_URL: 
    #SCRUMLR_CONFIG_PATH: 
  frontend:
    SCRUMLR_LISTEN_PORT: 80
    SCRUMLR_SERVER_URL: /api
    SCRUMLR_SHOW_LEGAL_DOCUMENTS: "true"
    #SCRUMLR_WEBSOCKET_URL: 
    #SCRUMLR_ANALYTICS_DATA_DOMAIN: 
    #SCRUMLR_ANALYTICS_SRC: 

nats:
  enabled: true

postgresql:
  enabled: true
  image:
    tag: latest
  global:
    postgresql:
      auth:
        postgresPassword: scrumlr
        username: scrumlr
        password: scrumlr
        database: scrumlr
  primary:
    resources: null
    persistence:
      enabled: true
      size: 1Gi
